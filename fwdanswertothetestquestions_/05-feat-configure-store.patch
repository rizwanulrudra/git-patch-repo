From d8e36bd91a82b5adecb85cdf349e5f0b9f32e2b8 Mon Sep 17 00:00:00 2001
From: beevk <beevk.singh@gmail.com>
Date: Wed, 21 Oct 2020 04:24:15 +0700
Subject: [PATCH] feat: configure store

---
 src/components/articles/Articles.vue | 42 +++++++++++++++++++
 src/store/articles/actions.js        | 63 ++++++++++++++++++++++++++++
 src/store/articles/getters.js        | 27 ++++++++++++
 src/store/articles/mutations.js      | 28 +++++++++++++
 src/store/index.js                   | 15 ++++---
 src/store/rootState.js               | 11 +++++
 src/store/types.js                   |  0
 src/views/About.vue                  |  5 ---
 src/views/Home.vue                   |  6 +--
 9 files changed, 183 insertions(+), 14 deletions(-)
 create mode 100644 src/components/articles/Articles.vue
 create mode 100644 src/store/articles/actions.js
 create mode 100644 src/store/articles/getters.js
 create mode 100644 src/store/articles/mutations.js
 create mode 100644 src/store/rootState.js
 create mode 100644 src/store/types.js
 delete mode 100644 src/views/About.vue

diff --git a/src/components/articles/Articles.vue b/src/components/articles/Articles.vue
new file mode 100644
index 0000000..b8d7b7f
--- /dev/null
+++ b/src/components/articles/Articles.vue
@@ -0,0 +1,42 @@
+<template>
+  <div class="borderWithPadding about">
+    <h2> Articles Component </h2>
+    <div>
+      <div v-if="isLoading">Loading spinner...</div>
+      <div v-else-if="hasError">{{errorMessage}}</div>
+      <div v-else v-for="article in articles" :key="article.slug">
+        <p>{{article.title}}</p>
+      </div>
+    </div>
+
+  </div>
+</template>
+
+<script>
+import { mapGetters, mapActions } from 'vuex';
+
+export default {
+  name: 'Articles',
+  components: {
+  },
+  methods: {
+    ...mapActions({
+      fetchArticles: 'fetchArticles',
+    }),
+  },
+  computed: {
+    ...mapGetters({
+      articles: 'processedArticles',
+      isLoading: 'isLoading',
+      hasError: 'hasError',
+      errorMessage: 'errorMessage',
+    }),
+  },
+  created() {
+    this.fetchArticles();
+  },
+};
+</script>
+
+<style scoped>
+</style>
diff --git a/src/store/articles/actions.js b/src/store/articles/actions.js
new file mode 100644
index 0000000..2aead54
--- /dev/null
+++ b/src/store/articles/actions.js
@@ -0,0 +1,63 @@
+// import { Api, ApiTokenMiddleware, WrapMiddleware } from '@beevk/newsapi-sdk';
+
+const sluggify = ({ publishedAt, title }) => {
+  if (!(publishedAt || title)) {
+    return '';
+  }
+  const trimmedDate = publishedAt?.split('T')[0];
+  const sluggifiedTitle = title?.toLowerCase()
+    .replace(/[^a-z0-9 -]/g, '')
+    .replace(/\s+/g, '-')
+    .replace(/-+/g, '-');
+  return `${trimmedDate}-${sluggifiedTitle}`;
+};
+
+const actions = {
+  async fetchArticles({ commit }) {
+    commit('setLoading', true);
+
+    const response = await fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=099148be22804e849a0c6fe022b7cf5e');
+    const data = await response.json();
+
+    const { articles, status, message } = data;
+    // console.log('fetchNews - data::: ', data, status);
+
+    if (status !== 'ok') {
+      commit('setLoading', false);
+      return commit('setNewsError', message);
+    }
+
+    const articlesWithSlug = articles.map(
+      (article) => {
+        const copy = { ...article };
+        // const { publishedAt, title } = copy;
+        const slug = sluggify(copy);
+        // console.log('SLUG:::', slug, copy);
+        copy.slug = slug;
+        return copy;
+      },
+    );
+
+    commit('setArticles', articlesWithSlug);
+    commit('clearNewsError', false);
+    return commit('setLoading', false);
+  },
+
+  setCurrentPage(context, slug) {
+    // const { news } = this.$state;
+    // if (!news) {
+    //   context.dispatch('fetchNews');
+    // }
+    const pages = localStorage.getItem('visitedPages') || '';
+    let allVisitedPages = [];
+    if (pages) {
+      allVisitedPages = JSON.parse(pages);
+    }
+    allVisitedPages.push(slug);
+    const allVisitedPagesList = JSON.stringify(allVisitedPages);
+    localStorage.setItem('visitedPages', allVisitedPagesList);
+    context.commit('updateCurrentPage', slug);
+  },
+};
+
+export default actions;
diff --git a/src/store/articles/getters.js b/src/store/articles/getters.js
new file mode 100644
index 0000000..1280775
--- /dev/null
+++ b/src/store/articles/getters.js
@@ -0,0 +1,27 @@
+const getters = {
+  processedArticles: (state) => {
+    const selectedSource = state.selectedSourceForFilter;
+    if (!selectedSource) {
+      return state.articles;
+    }
+    return state.articles.filter((article) => article.source.id === selectedSource);
+  },
+
+  isLoading: (state) => state.isLoading,
+
+  hasError: (state) => state.hasError,
+
+  errorMessage: (state) => state.errorMessage,
+
+  getCurrentArticle: (state) => {
+    const currentSlug = state.currentPage;
+    const allNews = state.news;
+    if (!allNews) {
+      return undefined;
+    }
+    const newsArticle = allNews.find((article) => article.slug === currentSlug);
+    return { ...newsArticle };
+  },
+};
+
+export default getters;
diff --git a/src/store/articles/mutations.js b/src/store/articles/mutations.js
new file mode 100644
index 0000000..8732f54
--- /dev/null
+++ b/src/store/articles/mutations.js
@@ -0,0 +1,28 @@
+const mutations = {
+  setLoading: (state, isLoading) => {
+    state.isLoading = isLoading;
+  },
+
+  setArticles: (state, news) => {
+    // const oldNews = state.news;
+    // console.log('setNews - data:::', oldNews);
+    state.articles = [...news];
+  },
+
+  setNewsError: (state, errorMessage) => {
+    state.hasError = true;
+    state.errorMessage = errorMessage;
+  },
+
+  clearNewsError: (state, hasError) => {
+    state.hasError = hasError;
+    state.errorMessage = '';
+  },
+
+  updateCurrentPage: (state, currentPage) => {
+    state.currentPage = currentPage;
+  },
+
+};
+
+export default mutations;
diff --git a/src/store/index.js b/src/store/index.js
index 9ea7685..47a2d59 100644
--- a/src/store/index.js
+++ b/src/store/index.js
@@ -1,15 +1,18 @@
 import Vue from 'vue';
 import Vuex from 'vuex';
 
+import actions from './articles/actions';
+import getters from './articles/getters';
+import mutations from './articles/mutations';
+import state from './rootState';
+
 Vue.use(Vuex);
 
 export default new Vuex.Store({
-  state: {
-  },
-  mutations: {
-  },
-  actions: {
-  },
+  state,
+  getters,
+  mutations,
+  actions,
   modules: {
   },
 });
diff --git a/src/store/rootState.js b/src/store/rootState.js
new file mode 100644
index 0000000..3cca82d
--- /dev/null
+++ b/src/store/rootState.js
@@ -0,0 +1,11 @@
+const state = {
+  isLoading: false,
+  hasError: false,
+  articles: [],
+  errorMessage: '',
+  searchQuery: '',
+  selectedSourceForFilter: '',
+  currentPage: '',
+};
+
+export default state;
diff --git a/src/store/types.js b/src/store/types.js
new file mode 100644
index 0000000..e69de29
diff --git a/src/views/About.vue b/src/views/About.vue
deleted file mode 100644
index 3fa2807..0000000
--- a/src/views/About.vue
+++ /dev/null
@@ -1,5 +0,0 @@
-<template>
-  <div class="about">
-    <h1>This is an about page</h1>
-  </div>
-</template>
diff --git a/src/views/Home.vue b/src/views/Home.vue
index 7060d28..2c53fdd 100644
--- a/src/views/Home.vue
+++ b/src/views/Home.vue
@@ -14,7 +14,7 @@
     <div class="borderWithPadding articles">
       articles
       <div class="borderWithPadding article">
-        article
+        <Articles />
       </div>
     </div>
   </div>
@@ -22,12 +22,12 @@
 
 <script>
 // @ is an alias to /src
-// import HelloWorld from '@/components/HelloWorld.vue';
+import Articles from '@/components/articles/Articles.vue';
 
 export default {
   name: 'Home',
   components: {
-    // HelloWorld,
+    Articles,
   },
 };
 </script>
-- 
2.25.1

